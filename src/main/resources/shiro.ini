[main]

;cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
;securityManager.cacheManager = $cacheManager

;sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
;securityManager.sessionManager = $sessionManager

;sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
;securityManager.sessionManager.sessionDAO = $sessionDAO

; sessionDAO.activeSessionsCacheName = myname


;cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
;securityManager.cacheManager = $cacheManager





;;; NOTE: loginUrl은 반드시 이렇게 지정하고, 또 urls에도 authc으로 지정할것.
;shiro.loginUrl = /login.jsp
authc.loginUrl = /login.jsp

;;; NOTE: login 성공시 이동할 URL.
authc.successUrl = /restricted.jsp	

;;; NOTE: logout 이후 이동할 URL.
logout.redirectUrl= /index.jsp

;;; NOTE: 로그인 실패시 loginUrl에서 사용가능한 request-attribute키 이름. (디폴트: shiroLoginFailure)
;authc.failureKeyAttribute = shiroLoginFailure

;;; NOTE: authenticated되었으나, authorization 단계에서 role, privilege이 부족한 경우에 보일 페이지. 
;shiro.unauthorizedUrl = /unauthorized.jsp
roles.unauthorizedUrl = /unauthorized.jsp
perms.unauthorizedUrl = /unauthorized.jsp



authc.usernameParam = username
authc.passwordParam = password
authc.rememberMeParam = rememberMe

securityManager.rememberMeManager.cookie.name = rememberMeCookie
;securityManager.rememberMeManager.cookie.maxAge = blah


[urls]

/login.jsp = authc

;;; NOTE: 로그아웃 처리 URL. 실제 존재하지 않는 파일임, 필터에 의해서 구현됨. 
/logout = logout
	
/restricted.jsp = user

;;; NOTE: 실제로 admin 사용자에 부여하지 않은 role을 요구하는 페이지.
;;; NOTE: unauthorizedUrl의 예제.
/privileged.jsp = user, roles[special]



;;; NOTE: 테스트용 사용자/비번.
;;; NOTE: role등도 지정이 가능하지만 생략.
[users]
admin = 1234




;;; EOF